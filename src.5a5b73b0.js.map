{"version":3,"sources":["src/index.js"],"names":["userScore","computerScore","userScore_span","document","getElementById","computerScore_span","scoreBoard_div","querySelector","result_div","rock_div","paper_div","scissors_div","getComputerChoice","Math","floor","random","convertCase","anythingIwant","win","user","computer","innerHTML","userName","fontsize","sup","compName","roundStatus","classList","add","setTimeout","remove","loses","draw","game","userChoice","computerChoice","main","addEventListener"],"mappings":";AAIA,IAAIA,EAAY,EACZC,EAAgB,EACdC,EAAiBC,SAASC,eAAe,cACzCC,EAAqBF,SAASC,eAAe,kBAC7CE,EAAiBH,SAASI,cAAc,gBACxCC,EAAaL,SAASI,cAAc,WACpCE,EAAWN,SAASC,eAAe,QACnCM,EAAYP,SAASC,eAAe,SACpCO,EAAeR,SAASC,eAAe,YAG7C,SAASQ,IAGP,MAFgB,CAAC,OAAQ,QAAS,YACbC,KAAKC,MAAsB,EAAhBD,KAAKE,WAKvC,SAASC,EAAYC,GACnB,MAAsB,UAAlBA,EAAkC,QAChB,aAAlBA,EAAqC,WAClC,OAIT,SAASC,EAAIC,EAAMC,GACjBpB,IAEAE,EAAemB,UAAYrB,EAC3B,IAAMsB,EAAW,UAAUC,SAAS,GAAGC,MACjCC,EAAW,UAAUF,SAAS,GAAGC,MACvChB,EAAWa,UAAkBL,MAAAA,OAAAA,EAC3BG,IACEG,OAAAA,EAAkBN,WAAAA,OAAAA,EAAYI,IAAYK,OAAAA,EAF9C,kBAGA,IAAMC,EAAcvB,SAASC,eAAee,GAC5CO,EAAYC,UAAUC,IAAI,iBAC1BC,WAAW,WAAA,OAAMH,EAAYC,UAAUG,OAAO,kBAAkB,KAIlE,SAASC,EAAMZ,EAAMC,GACnBnB,IAEAI,EAAmBgB,UAAYpB,EAC/B,IAAMqB,EAAW,UAAUC,SAAS,GAAGC,MACjCC,EAAW,UAAUF,SAAS,GAAGC,MACvChB,EAAWa,UAAkBL,MAAAA,OAAAA,EAC3BI,IACEK,OAAAA,EAAkBT,WAAAA,OAAAA,EAAYG,IAAQG,OAAAA,EAF1C,mBAGA,IAAMI,EAAcvB,SAASC,eAAee,GAC5CO,EAAYC,UAAUC,IAAI,gBAC1BC,WAAW,WAAA,OAAMH,EAAYC,UAAUG,OAAO,iBAAiB,KAIjE,SAASE,EAAKb,EAAMC,GACD,UAAUG,SAAS,GAAGC,MACtB,UAAUD,SAAS,GAAGC,MACvChB,EAAWa,UAAgDL,oCAAAA,OAAAA,EACzDG,GAJ0B,QAO5B,IAAMO,EAAcvB,SAASC,eAAee,GAC5CO,EAAYC,UAAUC,IAAI,cAC1BC,WAAW,WAAA,OAAMH,EAAYC,UAAUG,OAAO,eAAe,KAI/D,SAASG,EAAKC,GACZ,IAAMC,EAAiBvB,IAIvB,OAAQsB,EAAaC,GACnB,IAAK,YACL,IAAK,eACL,IAAK,gBACHjB,EAAIgB,EAAYC,GAEhB,MACF,IAAK,YACL,IAAK,eACL,IAAK,gBACHJ,EAAMG,EAAYC,GAElB,MACF,IAAK,WACL,IAAK,mBACL,IAAK,aACHH,EAAKE,EAAYC,IAsBvB,SAASC,IACP3B,EAAS4B,iBAAiB,QAAS,WAAA,OAAMJ,EAAK,UAC9CvB,EAAU2B,iBAAiB,QAAS,WAAA,OAAMJ,EAAK,WAC/CtB,EAAa0B,iBAAiB,QAAS,WAAA,OAAMJ,EAAK,cAGpDG","file":"src.5a5b73b0.js","sourceRoot":"..","sourcesContent":["// import \"./styles.css\";\n\n// cache the dom (storing for future use)\n// & reset everything to 0 value\nlet userScore = 0;\nlet computerScore = 0;\nconst userScore_span = document.getElementById(\"user-score\");\nconst computerScore_span = document.getElementById(\"computer-score\");\nconst scoreBoard_div = document.querySelector(\".score-board\");\nconst result_div = document.querySelector(\".result\");\nconst rock_div = document.getElementById(\"rock\");\nconst paper_div = document.getElementById(\"paper\");\nconst scissors_div = document.getElementById(\"scissors\");\n\n// set up the core function for the computer that will use math.random to loop through an array and return that value\nfunction getComputerChoice() {\n  const choices = [\"rock\", \"paper\", \"scissors\"];\n  const randomNumber = Math.floor(Math.random() * 3);\n  return choices[randomNumber];\n}\n\n// similar to convertcase but just takes lowercase and replaces with titlecase\nfunction convertCase(anythingIwant) {\n  if (anythingIwant === \"paper\") return \"Paper\";\n  if (anythingIwant === \"scissors\") return \"Scissors\";\n  return \"Rock\";\n}\n\n// Winning Condition - this handles what happens when the user clicks one of the choices where the value is them passed through as a parameter\nfunction win(user, computer) {\n  userScore++;\n  // console.log('user score is ' + userScore + ' ' + user);\n  userScore_span.innerHTML = userScore;\n  const userName = \" (user)\".fontsize(3).sup();\n  const compName = \" (comp)\".fontsize(3).sup();\n  result_div.innerHTML = `<p>${convertCase(\n    user\n  )}${userName} beats ${convertCase(computer)}${compName}. You win!</p>`;\n  const roundStatus = document.getElementById(user);\n  roundStatus.classList.add(\"winningStyles\");\n  setTimeout(() => roundStatus.classList.remove(\"winningStyles\"), 300);\n}\n\n// Losing Condition - this handles what happens when the user clicks one of the choices where the value is them passed through as a parameter\nfunction loses(user, computer) {\n  computerScore++;\n  // console.log('computer score is ' + computerScore + ' ' + computer);\n  computerScore_span.innerHTML = computerScore;\n  const userName = \" (user)\".fontsize(3).sup();\n  const compName = \" (comp)\".fontsize(3).sup();\n  result_div.innerHTML = `<p>${convertCase(\n    computer\n  )}${compName} beats ${convertCase(user)}${userName}. You lose!</p>`;\n  const roundStatus = document.getElementById(user);\n  roundStatus.classList.add(\"losingStyles\");\n  setTimeout(() => roundStatus.classList.remove(\"losingStyles\"), 300);\n}\n\n// Draw Condition - this handles what happens when the user clicks one of the choices where the value is them passed through as a parameter\nfunction draw(user, computer) {\n  const userName = \" (user)\".fontsize(3).sup();\n  const compName = \" (comp)\".fontsize(3).sup();\n  result_div.innerHTML = `<p>It was a draw! You both chose ${convertCase(\n    user\n  )}</p>`;\n  // \"It was a draw! You both chose \" + user + \" \" + computer; // old js\n  const roundStatus = document.getElementById(user);\n  roundStatus.classList.add(\"drawStyles\");\n  setTimeout(() => roundStatus.classList.remove(\"drawStyles\"), 300);\n}\n\n// The core game functions that set up and determine the games actual logic aka paper beats rock etc\nfunction game(userChoice) {\n  const computerChoice = getComputerChoice();\n  // console.log('Game function: user choice is = ' + userChoice);\n  // console.log('Game function: computer choice is = ' + computerChoice);\n\n  switch (userChoice + computerChoice) {\n    case \"paperrock\":\n    case \"rockscissors\":\n    case \"scissorspaper\":\n      win(userChoice, computerChoice);\n      // console.log(\"user wins\");\n      break;\n    case \"rockpaper\":\n    case \"scissorsrock\":\n    case \"paperscissors\":\n      loses(userChoice, computerChoice);\n      // console.log(\"computer wins\");\n      break;\n    case \"rockrock\":\n    case \"scissorsscissors\":\n    case \"paperpaper\":\n      draw(userChoice, computerChoice);\n      // console.log(\"draw\");\n      break;\n  }\n}\n// ES5 style of writing this function\n// function main() {\n//   rock_div.addEventListener('click', function() {\n//     game('rock');\n//   });\n\n//   paper_div.addEventListener('click', function() {\n//     game('paper');\n//   });\n\n//   scissors_div.addEventListener('click', function() {\n//     game('scissors');\n//   });\n// }\n\n// ES6 style of writing this function\n// This function creates and adds an eventlistener to the rock, paper scissors html element and the passes the value of that element to the game function\nfunction main() {\n  rock_div.addEventListener(\"click\", () => game(\"rock\"));\n  paper_div.addEventListener(\"click\", () => game(\"paper\"));\n  scissors_div.addEventListener(\"click\", () => game(\"scissors\"));\n}\n\nmain();\n"]}